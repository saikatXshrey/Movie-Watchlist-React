{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/MovieControls.js","components/MovieCard.js","components/Watchlist.js","components/Watched.js","components/ResultCard.js","components/Add.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","state","action","type","watchlist","payload","filter","movie","id","watched","initialState","localStorage","getItem","JSON","parse","GlobalContext","createContext","GlobalProvider","props","useReducer","AppReducer","dispatch","useEffect","setItem","stringify","Provider","value","addMovieToWatchlist","removeMovieFromWatchlist","addMovieToWatched","moveToWatchlist","removeFromWatched","children","MovieControls","useContext","onClick","MovieCard","poster_path","src","alt","title","Watchlist","length","map","Watched","ResultCard","storedMovie","find","o","storedMovieWatched","watchlistDisabled","watchedDisabled","release_date","substring","disabled","Add","useState","query","setQuery","results","setResults","placeholder","onChange","e","preventDefault","target","fetch","process","then","res","json","data","errors","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98b95187.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <div className=\"container\">\r\n                <div className=\"inner-content\">\r\n                    <div className=\"brand\">\r\n                        <Link to=\"/\">Watchlist</Link>\r\n                    </div>\r\n\r\n                    <ul className=\"nav-links\">\r\n                        <li>\r\n                            <Link to=\"/\">Watchlist</Link>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <Link to=\"/watched\">Watched</Link>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <Link to=\"/add\" className=\"btn\">+ Add</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","export default (state, action) => {\r\n    switch (action.type) {\r\n\r\n        case \"ADD_MOVIE_TO_WATCHLIST\":\r\n            return {\r\n                ...state,\r\n                watchlist: [action.payload, ...state.watchlist]\r\n            }\r\n\r\n        case \"REMOVE_MOVIE_FROM_WATCHLIST\":\r\n            return {\r\n                ...state,\r\n                watchlist: state.watchlist.filter(\r\n                    (movie) => movie.id !== action.payload)\r\n            }\r\n\r\n        case \"ADD_MOVIE_TO_WATCHED\":\r\n            return {\r\n                ...state,\r\n                watchlist: state.watchlist.filter(\r\n                    (movie) => movie.id !== action.payload.id),\r\n                watched: [action.payload, ...state.watched]\r\n            }\r\n\r\n        case \"MOVE_TO_WATCHLIST\":\r\n            return {\r\n                ...state,\r\n                watched: state.watched.filter(\r\n                    (movie) => movie.id !== action.payload.id),\r\n                watchlist: [action.payload, ...state.watchlist]\r\n            }\r\n\r\n        case \"REMOVE_MOVIE_FROM_WATCHED\":\r\n            return {\r\n                ...state,\r\n                watched: state.watched.filter(\r\n                    (movie) => movie.id !== action.payload)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n// initialState\r\nconst initialState = {\r\n    watchlist: localStorage.getItem('watchlist') ? JSON.parse(localStorage.getItem('watchlist')) : [],\r\n    watched: localStorage.getItem('watched') ? JSON.parse(localStorage.getItem('watched')) : []\r\n};\r\n\r\n//create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//provider components\r\nexport const GlobalProvider = props => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('watchlist', JSON.stringify(state.watchlist));\r\n        localStorage.setItem('watched', JSON.stringify(state.watched));\r\n    }, [state]);\r\n\r\n    //actions\r\n    const addMovieToWatchlist = movie => {\r\n        dispatch({ type: \"ADD_MOVIE_TO_WATCHLIST\", payload: movie });\r\n    };\r\n\r\n    const removeMovieFromWatchlist = (id) => {\r\n        dispatch({ type: \"REMOVE_MOVIE_FROM_WATCHLIST\", payload: id });\r\n    };\r\n\r\n    const addMovieToWatched = movie => {\r\n        dispatch({ type: \"ADD_MOVIE_TO_WATCHED\", payload: movie });\r\n    };\r\n\r\n    const moveToWatchlist = movie => {\r\n        dispatch({ type: \"MOVE_TO_WATCHLIST\", payload: movie });\r\n    };\r\n\r\n    const removeFromWatched = id => {\r\n        dispatch({ type: \"REMOVE_MOVIE_FROM_WATCHED\", payload: id });\r\n    };\r\n\r\n    return (\r\n        <GlobalContext.Provider\r\n            value={{\r\n                watchlist: state.watchlist,\r\n                watched: state.watched,\r\n                addMovieToWatchlist,\r\n                removeMovieFromWatchlist,\r\n                addMovieToWatched,\r\n                moveToWatchlist,\r\n                removeFromWatched\r\n            }}\r\n        >\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    )\r\n};","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst MovieControls = ({ movie, type }) => {\r\n    const { removeMovieFromWatchlist,\r\n        addMovieToWatched,\r\n        moveToWatchlist,\r\n        removeFromWatched } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <div className=\"inner-card-controls\">\r\n            {type === 'watchlist' && (\r\n                <>\r\n                    <button className=\"ctrl-btn\"\r\n                        onClick={() => addMovieToWatched(movie)}\r\n                    >\r\n                        <i className=\"fa-fw far fa-eye\"></i>\r\n                    </button>\r\n\r\n                    <button className=\"ctrl-btn\"\r\n                        onClick={() => removeMovieFromWatchlist(movie.id)}\r\n                    >\r\n                        <i className=\"fa-fw fa fa-times\"></i>\r\n                    </button>\r\n                </>\r\n            )}\r\n\r\n            {type === \"watched\" && (\r\n                <>\r\n                    <button className=\"ctrl-btn\"\r\n                        onClick={() => moveToWatchlist(movie)}\r\n                    >\r\n                        <i className=\"fa-fw far fa-eye-slash\"></i>\r\n                    </button>\r\n\r\n                    <button className=\"ctrl-btn\"\r\n                        onClick={() => removeFromWatched(movie.id)}\r\n                    >\r\n                        <i className=\"fa-fw fa fa-times\"></i>\r\n                    </button>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieControls;","import React from 'react'\r\nimport MovieControls from './MovieControls';\r\n\r\nconst MovieCard = ({ movie, type }) => {\r\n    return (\r\n        <div className=\"movie-card\">\r\n            <div className=\"overlay\"></div>\r\n\r\n            {movie.poster_path ? (\r\n                <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} alt={`${movie.title} Poster`}\r\n                />\r\n            ) : (\r\n                <div className=\"filler-poster\"></div>\r\n            )}\r\n\r\n            <MovieControls movie={movie} type={type} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieCard;","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport MovieCard from './MovieCard';\r\n\r\nconst Watchlist = () => {\r\n\r\n    const { watchlist } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <div className=\"movie-page\">\r\n            <div className=\"container\">\r\n                <div className=\"header\">\r\n                    <h1 className=\"heading\">My Watchlist</h1>\r\n\r\n                    <span className=\"count-pill\">{watchlist.length} {watchlist.length === 1 ? \"Movie\" : \"Movies\"}</span>\r\n                </div>\r\n\r\n                {watchlist.length > 0 ? (\r\n                    <div className=\"movie-grid\">\r\n                        {watchlist.map(movie => (\r\n                            <MovieCard movie={movie} type=\"watchlist\" />\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                    <h2 className=\"no-movies\">Watchlist Empty. Add some!</h2>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Watchlist;","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport MovieCard from './MovieCard';\r\n\r\nconst Watched = () => {\r\n\r\n    const { watched } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <div className=\"movie-page\">\r\n            <div className=\"container\">\r\n                <div className=\"header\">\r\n                    <h1 className=\"heading\">Watched Movies</h1>\r\n\r\n                    <span className=\"count-pill\">{watched.length} {watched.length === 1 ? \"Movie\" : \"Movies\"}</span>\r\n                </div>\r\n\r\n                {watched.length > 0 ? (\r\n                    <div className=\"movie-grid\">\r\n                        {watched.map(movie => (\r\n                            <MovieCard movie={movie} type=\"watched\" />\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                    <h2 className=\"no-movies\">You haven't watched any movie!</h2>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Watched;","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst ResultCard = ({ movie }) => {\r\n\r\n    const { addMovieToWatchlist, addMovieToWatched, watchlist, watched } = useContext(GlobalContext);\r\n\r\n    let storedMovie = watchlist.find(o => o.id === movie.id);\r\n    let storedMovieWatched = watched.find(o => o.id === movie.id);\r\n\r\n    const watchlistDisabled = storedMovie ? true : storedMovieWatched ? true : false;\r\n\r\n    const watchedDisabled = storedMovieWatched ? true : false;\r\n\r\n    return (\r\n        <div className=\"result-card\">\r\n            <div className=\"poster-wrapper\">\r\n                {movie.poster_path ? (\r\n                    <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} alt={`${movie.title} Poster`}\r\n                    />\r\n                ) : (\r\n                    <div className=\"filler-poster\"></div>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"info\">\r\n                <div className=\"header\">\r\n                    <h3 className=\"title\">{movie.title}</h3>\r\n                    <h4 className=\"release-date\">\r\n                        {movie.release_date ? movie.release_date.substring(0, 4) : `-_-`}\r\n                    </h4>\r\n                </div>\r\n\r\n                <div className=\"controls\">\r\n                    <button className=\"btn\"\r\n                        disabled={watchlistDisabled}\r\n                        onClick={() => addMovieToWatchlist(movie)}\r\n                    >Add to Watchlist</button>\r\n\r\n                    <button className=\"btn\"\r\n                        disabled={watchedDisabled}\r\n                        onClick={() => addMovieToWatched(movie)}\r\n                    >Add to Watched</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultCard;","import React, { useState } from 'react';\r\nimport ResultCard from './ResultCard';\r\n\r\nconst Add = () => {\r\n    const [query, setQuery] = useState(\"\");\r\n    const [results, setResults] = useState([]);\r\n\r\n    const onChange = e => {\r\n        e.preventDefault();\r\n\r\n        setQuery(e.target.value);\r\n\r\n        fetch(`https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1&include_adult=false&query=${e.target.value}`)\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if (!data.errors) {\r\n                    setResults(data.results);\r\n                } else {\r\n                    setResults([]);\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-page\">\r\n            <div className=\"container\">\r\n                <div className=\"add-content\">\r\n                    <div className=\"input-wrapper\">\r\n                        <input type=\"text\"\r\n                            placeholder=\"search movie\"\r\n                            value={query}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    {results.length > 0 && (\r\n                        <ul className=\"results\">\r\n                            {results.map(movie => (\r\n                                <li key={movie.id}>\r\n                                    <ResultCard movie={movie} />\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Add;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Watchlist from './components/Watchlist';\nimport Watched from './components/Watched';\nimport Add from './components/Add';\nimport './App.css';\nimport './lib/font-awesome/css/all.min.css';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nconst App = () => {\n  return (\n    <GlobalProvider>\n      <Router>\n        <Header />\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Watchlist />\n          </Route>\n\n          <Route path=\"/watched\">\n            <Watched />\n          </Route>\n\n          <Route path=\"/add\">\n            <Add />\n          </Route>\n        </Switch>\n      </Router>\n    </GlobalProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}